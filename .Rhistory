DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of Total Annual Cases in State or Territory',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of Total Annual Cases in State or Territory',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & Dogs recieved into RSPCA Australia's animal shelters")
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of Total Annual Cases in State or Territory',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & Dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of total annual cases in state or territory, by animal type',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
setwd("~/GitHub/TidyTuesdays")
ggsave(filename = 'week30.png', device = 'png', width = 8, height = 8, dpi = 'retina')
cats_and_dogs_NSW_QLD <- animal_outcomes_tidy %>%
dplyr::filter(animal_type == 'Cats' | animal_type == 'Dogs') %>%
dplyr::filter(state_or_territory == 'NSW' | state_or_territory == 'QLD') %>%
mutate(cat_image = 'https://upload.wikimedia.org/wikipedia/commons/5/5b/Cat_%2849952%29_-_The_Noun_Project.svg',
dog_image = 'https://upload.wikimedia.org/wikipedia/commons/8/89/Dog.svg',
QLD_image = 'https://en.wikipedia.org/wiki/Coat_of_arms_of_Queensland#/media/File:Coat_of_Arms_of_Queensland.svg',
NSW_image = 'https://en.wikipedia.org/wiki/Coat_of_arms_of_New_South_Wales#/media/File:Coat_of_Arms_of_New_South_Wales.svg')
library(ggimage)
RSPCA_plot <- ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of total annual cases in state or territory, by animal type',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
RSPCA_plot
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of total annual cases in state or territory, by animal type',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
cats_and_dogs_NSW_QLD <- animal_outcomes_tidy %>%
dplyr::filter(animal_type == 'Cats' | animal_type == 'Dogs') %>%
dplyr::filter(state_or_territory == 'NSW' | state_or_territory == 'QLD') %>%
mutate(cat_image = 'https://upload.wikimedia.org/wikipedia/commons/5/5b/Cat_%2849952%29_-_The_Noun_Project.svg',
dog_image = 'https://upload.wikimedia.org/wikipedia/commons/8/89/Dog.svg',
QLD_image = 'https://upload.wikimedia.org/wikipedia/commons/6/6b/Coat_of_Arms_of_Queensland.svg',
NSW_image = 'https://upload.wikimedia.org/wikipedia/commons/2/21/Coat_of_Arms_of_New_South_Wales.svg')
library(ggimage)
RSPCA_plot <- ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.15)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of total annual cases in state or territory, by animal type',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
RSPCA_plot
ggplot(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized'))+
geom_line(mapping = aes(x = year, y = count_prop_by_state, col = outcome, linetype = outcome))+
scale_color_manual(values = c('firebrick', 'forestgreen', 'blue4'))+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Cats'),
mapping = aes(x = 2006, y = 0.8, image = cat_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'QLD'),
mapping = aes(x = 2010, y = 0.8, image = QLD_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(animal_type == 'Dogs'),
mapping = aes(x = 2006, y = 0.8, image = dog_image),
alpha = 0.4, size = 0.15)+
geom_image(data = cats_and_dogs_NSW_QLD %>%
dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
dplyr::filter(state_or_territory == 'NSW'),
mapping = aes(x = 2010, y = 0.8, image = NSW_image),
alpha = 0.4, size = 0.2)+
facet_grid(state_or_territory_long ~ animal_type)+
scale_y_continuous(name = 'Percentage of total annual cases in state or territory, by animal type',
limits = c(0, 1), labels = scales::label_percent())+
# geom_text(data = cats_and_dogs_NSW_QLD %>%
#             dplyr::filter(outcome == 'Reclaimed' | outcome == 'Rehomed' | outcome == 'Euthanized') %>%
#             dplyr::filter(is.na(count_prop_by_state)),
#             mapping = aes(x = year, y = 0, label = 'N/A'),
#           family = 'Bahnschrift', size = 3)+
DomDF::theme_ddf_light()+
theme(axis.title.x = element_blank())+
labs(title = "Cats & dogs recieved into RSPCA Australia's animal shelters",
subtitle = "The proportion of RSPCA Australia's cats and dogs being rehomed has increased in recent years. \nThere has been a corresponding reduction in the number being euthanized.",
caption = 'Tidy Tuesday 2020, Week 30   |   Data from the RSPCA   |   Images from Wikipedia   |   @d73mwf')
ggsave(filename = 'week30.png', device = 'png', width = 8, height = 8, dpi = 'retina')
ggplot(data = euro_scorers,
mapping = aes(x = 90/Mins_per_assist, y = 90/Mins_per_goal))+
ggforce::geom_arc(mapping = aes(x0 = 0, y0 = 0, r = radius,
start = 0, end = pi/2,
x = NULL, y = NULL),
linetype = 2, color = 'black')+
geom_point(shape = 21, size = 3, mapping = aes(fill = Position))+
#  facet_wrap(facets = ~ Position)+
scale_fill_viridis_d()+
ggrepel::geom_text_repel(mapping = aes(label = Player),
data = euro_scorers %>%
dplyr::filter(sqrt((90/Mins_per_assist)^2 + (90/Mins_per_goal)^2) >= radius | Position == 'Attacking Midfield'),
size = 3, family ='Bahnschrift', segment.alpha = 0.25)+
geom_label(mapping = aes(x = radius, y = 0, label = paste('r = ', signif(x = radius, digits = 3))),
size = 3.5, family = 'Bahnschrift')+
#  geom_abline(slope = -1, intercept = 1, linetype = 2, alpha = 0.25)+
DomDF::theme_ddf_light()+
#  scale_x_continuous(limits = c(0, 1.1)) + scale_y_continuous(limits = c(0.4, 1.4))+
labs(x = 'Assists per 90 Minutes', y = 'Goals per 90 Minutes',
title = paste('Players who have scored at least', min_goals, 'goals in the Top',
length(unique(euro_scorers$League)), 'European leagues (2019-20 season)'),
caption = 'Data from transfermarkt.com')
ggplot(data = euro_scorers,
mapping = aes(x = 90/Mins_per_assist, y = 90/Mins_per_goal))+
ggforce::geom_arc(mapping = aes(x0 = 0, y0 = 0, r = radius,
start = 0, end = pi/2,
x = NULL, y = NULL),
linetype = 2, color = 'black')+
geom_point(shape = 21, size = 3, mapping = aes(fill = Position))+
#  facet_wrap(facets = ~ Position)+
scale_fill_viridis_d()+
ggrepel::geom_text_repel(mapping = aes(label = Player),
data = euro_scorers %>%
dplyr::filter(sqrt((90/Mins_per_assist)^2 + (90/Mins_per_goal)^2) >= radius | Position == 'Central Midfield'),
size = 3, family ='Bahnschrift', segment.alpha = 0.25)+
geom_label(mapping = aes(x = radius, y = 0, label = paste('r = ', signif(x = radius, digits = 3))),
size = 3.5, family = 'Bahnschrift')+
#  geom_abline(slope = -1, intercept = 1, linetype = 2, alpha = 0.25)+
DomDF::theme_ddf_light()+
#  scale_x_continuous(limits = c(0, 1.1)) + scale_y_continuous(limits = c(0.4, 1.4))+
labs(x = 'Assists per 90 Minutes', y = 'Goals per 90 Minutes',
title = paste('Players who have scored at least', min_goals, 'goals in the Top',
length(unique(euro_scorers$League)), 'European leagues (2019-20 season)'),
caption = 'Data from transfermarkt.com')
ggplot(data = euro_scorers,
mapping = aes(x = 90/Mins_per_assist, y = 90/Mins_per_goal))+
ggforce::geom_arc(mapping = aes(x0 = 0, y0 = 0, r = radius,
start = 0, end = pi/2,
x = NULL, y = NULL),
linetype = 2, color = 'black')+
geom_point(shape = 21, size = 3, mapping = aes(fill = Position))+
#  facet_wrap(facets = ~ Position)+
scale_fill_viridis_d()+
ggrepel::geom_text_repel(mapping = aes(label = Player),
data = euro_scorers %>%
dplyr::filter(sqrt((90/Mins_per_assist)^2 + (90/Mins_per_goal)^2) >= radius | Position == 'NA'),
size = 3, family ='Bahnschrift', segment.alpha = 0.25)+
geom_label(mapping = aes(x = radius, y = 0, label = paste('r = ', signif(x = radius, digits = 3))),
size = 3.5, family = 'Bahnschrift')+
#  geom_abline(slope = -1, intercept = 1, linetype = 2, alpha = 0.25)+
DomDF::theme_ddf_light()+
#  scale_x_continuous(limits = c(0, 1.1)) + scale_y_continuous(limits = c(0.4, 1.4))+
labs(x = 'Assists per 90 Minutes', y = 'Goals per 90 Minutes',
title = paste('Players who have scored at least', min_goals, 'goals in the Top',
length(unique(euro_scorers$League)), 'European leagues (2019-20 season)'),
caption = 'Data from transfermarkt.com')
ggplot(data = euro_scorers,
mapping = aes(x = 90/Mins_per_assist, y = 90/Mins_per_goal))+
ggforce::geom_arc(mapping = aes(x0 = 0, y0 = 0, r = radius,
start = 0, end = pi/2,
x = NULL, y = NULL),
linetype = 2, color = 'black')+
geom_point(shape = 21, size = 3, mapping = aes(fill = Position))+
#  facet_wrap(facets = ~ Position)+
scale_fill_viridis_d()+
ggrepel::geom_text_repel(mapping = aes(label = Player),
data = euro_scorers %>%
dplyr::filter(sqrt((90/Mins_per_assist)^2 + (90/Mins_per_goal)^2) >= radius | isna(Position) | Position == 'Central Midfield'),
size = 3, family ='Bahnschrift', segment.alpha = 0.25)+
geom_label(mapping = aes(x = radius, y = 0, label = paste('r = ', signif(x = radius, digits = 3))),
size = 3.5, family = 'Bahnschrift')+
#  geom_abline(slope = -1, intercept = 1, linetype = 2, alpha = 0.25)+
DomDF::theme_ddf_light()+
#  scale_x_continuous(limits = c(0, 1.1)) + scale_y_continuous(limits = c(0.4, 1.4))+
labs(x = 'Assists per 90 Minutes', y = 'Goals per 90 Minutes',
title = paste('Players who have scored at least', min_goals, 'goals in the Top',
length(unique(euro_scorers$League)), 'European leagues (2019-20 season)'),
caption = 'Data from transfermarkt.com')
ggplot(data = euro_scorers,
mapping = aes(x = 90/Mins_per_assist, y = 90/Mins_per_goal))+
ggforce::geom_arc(mapping = aes(x0 = 0, y0 = 0, r = radius,
start = 0, end = pi/2,
x = NULL, y = NULL),
linetype = 2, color = 'black')+
geom_point(shape = 21, size = 3, mapping = aes(fill = Position))+
#  facet_wrap(facets = ~ Position)+
scale_fill_viridis_d()+
ggrepel::geom_text_repel(mapping = aes(label = Player),
data = euro_scorers %>%
dplyr::filter(sqrt((90/Mins_per_assist)^2 + (90/Mins_per_goal)^2) >= radius | is.na(Position) | Position == 'Central Midfield'),
size = 3, family ='Bahnschrift', segment.alpha = 0.25)+
geom_label(mapping = aes(x = radius, y = 0, label = paste('r = ', signif(x = radius, digits = 3))),
size = 3.5, family = 'Bahnschrift')+
#  geom_abline(slope = -1, intercept = 1, linetype = 2, alpha = 0.25)+
DomDF::theme_ddf_light()+
#  scale_x_continuous(limits = c(0, 1.1)) + scale_y_continuous(limits = c(0.4, 1.4))+
labs(x = 'Assists per 90 Minutes', y = 'Goals per 90 Minutes',
title = paste('Players who have scored at least', min_goals, 'goals in the Top',
length(unique(euro_scorers$League)), 'European leagues (2019-20 season)'),
caption = 'Data from transfermarkt.com')
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = metascore, y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = metascore, y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 92),
family = 'Bahnschrift', size = 3)+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_light()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = metascore, y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = metascore, y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 92),
family = 'Bahnschrift', size = 3)+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = metascore, y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = metascore, y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 92),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = metascore, y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = metascore, y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 93),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = log(metascore), y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = metascore, y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 93),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = log(metascore), y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = log(metascore), y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 93),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = log(metascore), y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.5)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = log(metascore), y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 94),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
ggplot(data = million_plus %>%
dplyr::filter(!is.na(release_year)))+
geom_point(mapping = aes(x = log(metascore), y = price, col = normalised_log_median_playtime),
size = 2, alpha = 0.8)+
scale_color_viridis_c()+
ggrepel::geom_text_repel(mapping = aes(x = log(metascore), y = price, label = game),
data =  million_plus %>%
dplyr::filter(!is.na(release_year) & metascore > 94),
family = 'Bahnschrift', size = 3, col = 'white')+
facet_wrap(facets = ~ release_decade, ncol = 1)+
DomDF::theme_ddf_dark()
